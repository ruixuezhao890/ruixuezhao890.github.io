[{"title":"「破茧计划」vortexRT操作系统开发全周期实录","url":"/2025/04/21/rtos/vortexRT_1/","content":"\n\nVX.01 宏力调控：条件编译实现内核模块化设计1️⃣ 宏控制层次结构 (三明治结构🍔)🎯 1.1 核心配置宏 (必选项)\nvortexRT_PROCESS_COUNT: 定义系统最大进程数 👉 就像餐厅座位数，决定了能接待多少客人\nvortexRT_PRIORITY_ORDER: 优先级排序方式(0-升序&#x2F;1-降序)\nvortexRT_CONTEXT_SWITCH_SCHEME: 上下文切换方案\n\n🎛️ 1.2 功能开关宏 (可选项)\nvortexRT_USER_DEFINED_CRITSECT_ENABLE: 自定义临界区开关 🔒 就像餐厅VIP包间，可以自定义规则\nvortexRT_SYSTIMER_NEST_INTS_ENABLE: 系统定时器嵌套中断开关 ⏱️ 允许定时器中断嵌套，就像VIP插队特权\nvortexRT_SYSTEM_TICKS_ENABLE: 系统滴答开关 💓 系统的心跳，开启后才有时间概念\n\n1.3 调试与扩展宏\nvortexRT_DEBUG_ENABLE: 调试模式开关\nvortexRT_PROCESS_RESTART_ENABLE: 进程重启功能开关\n\n2. 条件编译实现机制2.1 宏定义检查#ifndef vortexRT_PRIORITY_ORDER#error &quot;Error: Config macro vortexRT_PRIORITY_ORDER must be defined!&quot;#endif\n\n2.2 值域验证#if (vortexRT_PRIORITY_ORDER &lt; 0) || (vortexRT_PRIORITY_ORDER &gt; 1)#error &quot;Error: vortexRT_PRIORITY_ORDER must have values 0 or 1 only!&quot;#endif\n\n2.3 默认值设置#ifndef vortexRT_USER_DEFINED_CRITSECT_ENABLE#define vortexRT_USER_DEFINED_CRITSECT_ENABLE  0#endif\n\n3. 类型系统设计3.1 进程映射类型typedef uint_fast8_t TProcessMap;  // 根据进程数量自动选择\n\n3.2 优先级枚举enum TPriority &#123;    #if vortexRT_PROCESS_COUNT &gt; 0        pr0,    #endif    // ...    prIDLE&#125;;\n\n3.3 状态类型enum TProcessStartState &#123;    pssRunning,    pssSuspended&#125;;\n\n4. 优先级动态生成算法4.1 升序优先级生成#if vortexRT_PRIORITY_ORDER == 0enum TPriority &#123;    #if vortexRT_PROCESS_COUNT &gt; 0        pr0,    #endif    // ...    prIDLE&#125;;\n\n4.2 降序优先级生成enum TPriority &#123;    prIDLE,    #if vortexRT_PROCESS_COUNT &gt; 30        pr30,    #endif    // ...&#125;;\n\n5. UML架构关系补充@startumlskinparam monochrome trueclass &quot;宏控制系统&quot; &#123;  + 配置验证机制  + 默认值设置  + 错误检查&#125;class &quot;类型生成器&quot; &#123;  + 动态生成优先级  + 自动选择数据类型&#125;&quot;宏控制系统&quot; --&gt; &quot;类型生成器&quot; : 控制@enduml\n\n\n","categories":["嵌入式"],"tags":["rtos"]}]